.px-3.5.bg-white.dark:bg-gray-800.mt-6.lg:mt-10.w-full
  .md:mx-14.flex.flex-col
    h1.block.w-full.text-center.text-green-400.text-2xl.font-bold
      | ランキング
    .mt-6.lg:mt-10
      .relative.px-6.py-3.text-center.text-base.font-medium.text-white.rounded-t-xl.md:rounded-xl.bg-green-400.whitespace-nowrap
        | #{@menu}
        span.absolute.right-0.mr-4
          .relative.inline-flex
            svg.w-2.h-2.absolute.bottom-0.right-0.mb-2.mr-4.pointer-events-none[xmlns="http://www.w3.org/2000/svg" viewbox="0 0 412 232"]
              path[d="M206 171.144L42.678 7.822c-9.763-9.763-25.592-9.763-35.355 0-9.763 9.764-9.763 25.592 0 35.355l181 181c4.88 4.882 11.279 7.323 17.677 7.323s12.796-2.441 17.678-7.322l181-181c9.763-9.764 9.763-25.592 0-35.355-9.763-9.763-25.592-9.763-35.355 0L206 171.144z" fill="#648299" fill-rule="nonzero"]
            = select :timezone, :eatdate, options_for_select(Eatdate.timezones.keys),{}, form: "food_form", id: "timezone", class: "cursor-pointer border border-gray-300 rounded-full text-gray-600 h-8 pl-5 pr-10 bg-white hover:border-gray-400 focus:outline-none appearance-none"
    section.text-gray-600.body-font.hidden.md:block
      .container.pt-8
        .flex.flex-wrap.-m-4
          - @eatdate.each do |eatdate|
            .p-4.xl:w-1/4.lg:w-1/3.md:w-1/2
              .border-2.border-gray-200.border-opacity-60.rounded-lg.overflow-hidden
                .w-1/2.h-48.w-full.object-center.flex.flex-wrap.gap-y-4.gap-x-2.md:gap-x-4.lg:gap-1.items-center.p-4.xl:px-1[class="lg:px-2.5 md:px-3"]
                  - eatdate.foods.pluck(:image).each_with_index do |image, i|
                    - if i < 6
                      - if image.present?
                        - if eatdate.foods.length == 1
                          = image_tag image, class: "h-44 w-44 inline-block mx-auto"
                        - elsif eatdate.foods.length == 2
                          = image_tag image, class: "h-28 w-28 inline-block mx-auto"
                        - else
                          = image_tag image, class: "md:h-20 md:w-20 h-24 w-24 inline-block"
                      - else
                        - if eatdate.foods.length == 1
                          = image_tag "l_e_others_501.png", class: "h-44 w-44 inline-block mx-auto"
                        - elsif eatdate.foods.length == 2
                          = image_tag "l_e_others_501.png", class: "h-28 w-28 inline-block mx-auto"
                        - else
                          = image_tag "l_e_others_501.png", class: "md:h-20 md:w-20 h-24 w-24 inline-block"
                .p-4
                  h1.title-font.text-lg.font-medium.text-gray-900.mb-3
                    | #{eatdate.user.name}さん
                  .flex.items-center.flex-wrap.justify-end
                    span.inline-flex.items-center.md:mb-2.lg:mb-0.mr-auto
                      | #{eatdate.date}
                      / svg.w-4.h-4.ml-2[viewbox="0 0 24 24" stroke="currentColor" stroke-width="2" fill="none" stroke-linecap="round" stroke-linejoin="round"]
                        path[d="M5 12h14"]
                        path[d="M12 5l7 7-7 7"]
                    - if eatdate.foods.pluck(:calorie).map!{|x| x.to_i}.sum != 0
                      span.px-2.leading-relaxed.mr-2.text-xs.font-medium.tracking-wide.text-indigo-500.bg-indigo-50.rounded-full
                        | #{eatdate.foods.pluck(:calorie).map!{|x| x.to_i}.sum}kcal
                    span id="js-like-button-#{eatdate.id}"
                      = render 'eatdate_likes/like', eatdate: eatdate
    ul.divide-y.divide-gray-200.border.shadow-lg.rounded-b-xl.block.md:hidden
      - @eatdate.each do |eatdate|
        li.focus:outline-none.hover:bg-gray-50.text-gray-600.hover:text-gray-800
          a[href="#"]
            .p-3.flex.flex-col
              .flex.flex-row.mb-2
                span.text-sm.tracking-wide.truncate.mr-auto
                  | #{eatdate.user.name}さん
                - if eatdate.foods.pluck(:calorie).map!{|x| x.to_i}.sum != 0
                  span.px-2.leading-relaxed.mr-2.text-xs.font-medium.tracking-wide.text-indigo-500.bg-indigo-50.rounded-full
                    | #{eatdate.foods.pluck(:calorie).map!{|x| x.to_i}.sum}kcal
                span id="js-like-button-0#{eatdate.id}"
                  = render 'eatdate_likes/like', eatdate: eatdate
              .flex.gap-x-3
                - eatdate.foods.pluck(:image).each_with_index do |image, i|
                  - if i < 6
                    - if image.present?
                      = image_tag image, class: "h-10 w-10 inline-block"
                    - else
                      = image_tag "l_e_others_501.png", class: "h-10 w-10 inline-block"
    .container.mx-auto.flex.flex-wrap.my-10.justify-center.items-center
      == pagy_nav(@pagy)
      / ul.flex.items-center.justify-center
      /   li.mr-3.p-1.cursor-pointer.rounded-full.border-solid.border-2.border-gray-400.hover:bg-blue-100
      /     svg.transform.transition-transform.duration-500.ease-in-out fill="none" height="24" stroke="#4299e1" viewbox=("0 0 24 24") width="24" 
      /       path d=("M11 19l-7-7 7-7m8 14l-7-7 7-7") stroke-linecap="round" stroke-linejoin="round" stroke-width="2" 
      /   li.p-1.mr-3.rounded-full.bg-blue-500.rounded-full.h-8.w-8.text-white.flex.items-center.justify-center.cursor-pointer.hover:bg-blue-700 1
      /   li.p-1.mr-3.rounded-full.cursor-pointer.h-8.w-8.border-solid.border-2.flex.items-center.justify-center.border-gray-400.hover:bg-blue-100 2
      /   li.p-1.mr-3.rounded-full.cursor-pointer.h-8.w-8.border-solid.border-2.flex.items-center.justify-center.border-gray-400.hover:bg-blue-100 3
      /   li.p-1.mr-3.rounded-full.cursor-pointer.h-8.w-8.border-solid.border-2.flex.items-center.justify-center.border-gray-400.hover:bg-blue-100 4
      /   li.p-1.mr-3.rounded-full.cursor-pointer.h-8.w-8.border-solid.border-2.flex.items-center.justify-center.border-gray-400.hover:bg-blue-100 5
      /   li.p-1.mr-3.rounded-full.cursor-pointer.border-solid.border-2.border-gray-400.hover:bg-blue-100
      /     svg.transform.transition-transform.duration-500.ease-in-out fill="none" height="24" stroke="#4299e1" viewbox=("0 0 24 24") width="24" 
      /       path d=("M13 5l7 7-7 7M5 5l7 7-7 7") stroke-linecap="round" stroke-linejoin="round" stroke-width="2" 


/ script[type="text/javascript"]
/   |  function changeAtiveTab(event,tabID){ let element = event.target; while(element.nodeName !== "A"){ element = element.parentNode; } ulElement = element.parentNode.parentNode; aElements = ulElement.querySelectorAll("li > a"); tabContents = document.getElementById("tabs-id").querySelectorAll(".tab-content > div"); for(let i = 0 ; i < aElements.length; i++){ aElements[i].classList.remove("text-white"); aElements[i].classList.remove("bg-pink-600"); aElements[i].classList.add("text-pink-600"); aElements[i].classList.add("bg-white"); tabContents[i].classList.add("hidden"); tabContents[i].classList.remove("block"); } element.classList.remove("text-pink-600"); element.classList.remove("bg-white"); element.classList.add("text-white"); element.classList.add("bg-pink-600"); document.getElementById(tabID).classList.remove("hidden"); document.getElementById(tabID).classList.add("block"); }
/ script
/   |  let tabsContainer = document.querySelector("#tabs"); let tabTogglers = tabsContainer.querySelectorAll("a"); console.log(tabTogglers); tabTogglers.forEach(function(toggler) { toggler.addEventListener("click", function(e) { e.preventDefault(); let tabName = this.getAttribute("href"); let tabContents = document.querySelector("#tab-contents"); for (let i = 0; i < tabContents.children.length; i++) { tabTogglers[i].parentElement.classList.remove("border-green-400", "border-b", "-mb-px", "opacity-100"); tabContents.children[i].classList.remove("hidden"); if ("#" + tabContents.children[i].id === tabName) { continue; } tabContents.children[i].classList.add("hidden"); } e.target.parentElement.classList.add("border-green-400", "border-b-4", "-mb-px", "opacity-100"); }); }); document.getElementById("default-tab").click();
/ style
/   |  .dropdown:hover > .dropdown-content { display: block; }
javascript:
  let url = new URL(window.location.href);
  let params = url.searchParams;
  
  function redirectValue() {
    let timezone = document.getElementById('timezone');
    location.href = '/rankings' + "?time=" + timezone.value;
  }
  
  let timezone = document.getElementById('timezone');
  
  if(params.get('time')){
    timezone.value = params.get('time');
  }
  
  timezone.addEventListener('change', redirectValue);
